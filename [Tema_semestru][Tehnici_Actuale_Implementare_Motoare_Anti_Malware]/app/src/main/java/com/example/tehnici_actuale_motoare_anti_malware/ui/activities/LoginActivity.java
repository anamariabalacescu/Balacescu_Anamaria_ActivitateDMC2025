package com.example.tehnici_actuale_motoare_anti_malware.ui.activities;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.Toast;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import com.example.tehnici_actuale_motoare_anti_malware.R;
import com.example.tehnici_actuale_motoare_anti_malware.util.PrefManager;
import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInClient;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.common.SignInButton;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.GoogleAuthProvider;

public class LoginActivity extends AppCompatActivity {
    private static final String TAG = "LoginActivity";
    private static final int RC_GOOGLE = 1000;

    private EditText etEmail, etPassword;
    private Switch switchRemember;
    private PrefManager pref;
    private FirebaseAuth auth;
    private GoogleSignInClient googleClient;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        pref = new PrefManager(this);
        auth = FirebaseAuth.getInstance();

        // auto‐login if remembered
        if (pref.isRememberMe() && auth.getCurrentUser() != null) {
            startActivity(new Intent(this, DashboardActivity.class));
            finish();
            return;
        }

        etEmail      = findViewById(R.id.etEmail);
        etPassword   = findViewById(R.id.etPassword);
        switchRemember = findViewById(R.id.switchRemember);
        Button btnLogin    = findViewById(R.id.btnLogin);
        Button btnRegister = findViewById(R.id.btnRegister);
        SignInButton btnGoogle = findViewById(R.id.btnGoogle);

        // Email/password login
        btnLogin.setOnClickListener(v -> {
            String email = etEmail.getText().toString().trim();
            String pass  = etPassword.getText().toString().trim();
            if (email.isEmpty()||pass.isEmpty()) {
                Toast.makeText(this, "Enter email & pass", Toast.LENGTH_SHORT).show();
                return;
            }
            auth.signInWithEmailAndPassword(email, pass)
                    .addOnSuccessListener(r -> {
                        pref.saveRememberMe(email, switchRemember.isChecked());
                        startActivity(new Intent(this, DashboardActivity.class));
                        finish();
                    })
                    .addOnFailureListener(e ->
                            Toast.makeText(this, "Auth failed: "+e.getMessage(),Toast.LENGTH_SHORT).show()
                    );
        });

        // Registration
        btnRegister.setOnClickListener(v -> {
            String email = etEmail.getText().toString().trim();
            String pass  = etPassword.getText().toString().trim();
            if (email.isEmpty()||pass.length()<6) {
                Toast.makeText(this, "6+ char password", Toast.LENGTH_SHORT).show();
                return;
            }
            auth.createUserWithEmailAndPassword(email, pass)
                    .addOnSuccessListener(r -> {
                        Toast.makeText(this, "Registered!",Toast.LENGTH_SHORT).show();
                    })
                    .addOnFailureListener(e ->
                            Toast.makeText(this, "Reg failed: "+e.getMessage(),Toast.LENGTH_SHORT).show()
                    );
        });

        // Google Sign-In
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(
                GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
        googleClient = GoogleSignIn.getClient(this, gso);

        btnGoogle.setOnClickListener(v ->
                startActivityForResult(googleClient.getSignInIntent(), RC_GOOGLE)
        );
    }

    @Override
    protected void onActivityResult(int req, int res, @Nullable Intent data) {
        super.onActivityResult(req, res, data);
        if (req==RC_GOOGLE) {
            Task<GoogleSignInAccount> task =
                    GoogleSignIn.getSignedInAccountFromIntent(data);
            try {
                String idToken = task.getResult(ApiException.class).getIdToken();
                AuthCredential cred = GoogleAuthProvider.getCredential(idToken,null);
                auth.signInWithCredential(cred)
                        .addOnSuccessListener(r -> {
                            pref.saveRememberMe(auth.getCurrentUser().getEmail(), true);
                            startActivity(new Intent(this, DashboardActivity.class));
                            finish();
                        })
                        .addOnFailureListener(e ->
                                Toast.makeText(this,"Google auth failed",Toast.LENGTH_SHORT).show()
                        );
            } catch (ApiException e) {
                Log.e(TAG,"Google sign-in failed",e);
            }
        }
    }
}
