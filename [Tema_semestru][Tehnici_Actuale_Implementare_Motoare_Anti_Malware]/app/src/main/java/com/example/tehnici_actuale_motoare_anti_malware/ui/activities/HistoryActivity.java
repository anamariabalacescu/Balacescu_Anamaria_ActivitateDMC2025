package com.example.tehnici_actuale_motoare_anti_malware.ui.activities;

import android.os.Bundle;
import android.view.View;
import android.widget.ListView;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.example.tehnici_actuale_motoare_anti_malware.R;
import com.example.tehnici_actuale_motoare_anti_malware.data.local.model.HistoryEntry;
import com.example.tehnici_actuale_motoare_anti_malware.ui.adapters.HistoryAdapter;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class HistoryActivity extends AppCompatActivity {
    private TextView tvNoHistory;
    private ListView listHistory;
    private final List<HistoryEntry> entries = new ArrayList<>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_history);

        tvNoHistory  = findViewById(R.id.tvNoHistory);
        listHistory  = findViewById(R.id.listHistory);

        HistoryAdapter adapter = new HistoryAdapter(this, entries);
        listHistory.setAdapter(adapter);

        DatabaseReference ref = FirebaseDatabase
                .getInstance()
                .getReference("vt_history");

        ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot snap) {
                entries.clear();
                for (DataSnapshot doc : snap.getChildren()) {
                    HistoryEntry h = doc.getValue(HistoryEntry.class);
                    if (h != null) entries.add(h);
                }
                // sort newest first
                Collections.sort(entries, Comparator.comparingLong(HistoryEntry::getTimestamp).reversed());
                if (entries.isEmpty()) {
                    tvNoHistory.setVisibility(View.VISIBLE);
                } else {
                    tvNoHistory.setVisibility(View.GONE);
                    adapter.notifyDataSetChanged();
                }
            }
            @Override
            public void onCancelled(DatabaseError err) {
                tvNoHistory.setText("Error loading history");
                tvNoHistory.setVisibility(View.VISIBLE);
            }
        });
    }
}
