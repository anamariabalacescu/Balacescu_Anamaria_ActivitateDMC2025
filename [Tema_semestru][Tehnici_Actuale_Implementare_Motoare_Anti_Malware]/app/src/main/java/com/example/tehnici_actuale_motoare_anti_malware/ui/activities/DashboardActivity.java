package com.example.tehnici_actuale_motoare_anti_malware.ui.activities;

import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import com.example.tehnici_actuale_motoare_anti_malware.R;
import com.example.tehnici_actuale_motoare_anti_malware.data.remote.Definition;
import com.example.tehnici_actuale_motoare_anti_malware.domain.usecase.FetchDefinitionsUseCase;
import com.example.tehnici_actuale_motoare_anti_malware.ui.adapters.VirusDefinitionAdapter;
import com.example.tehnici_actuale_motoare_anti_malware.util.PrefManager;
import com.google.firebase.auth.FirebaseAuth;

import java.util.ArrayList;
import java.util.List;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class DashboardActivity extends AppCompatActivity {
    private Spinner spinnerScanType;
    private Button btnStartScan;
    private ListView listDefinitions;
    private VirusDefinitionAdapter defAdapter;
    private final List<Definition> defs = new ArrayList<>();
    private FirebaseAuth auth;
    private PrefManager pref;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_dashboard);

        // 1) set up the Toolbar as ActionBar
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        auth = FirebaseAuth.getInstance();
        pref = new PrefManager(this);

        spinnerScanType = findViewById(R.id.spinnerScanType);
        btnStartScan    = findViewById(R.id.btnStartScan);
        listDefinitions = findViewById(R.id.listDefinitions);

        // Spinner setup
        String[] types = {"FAST", "INTENSIVE", "VIRUSTOTAL"};
        spinnerScanType.setAdapter(new ArrayAdapter<>(
                this,
                android.R.layout.simple_spinner_dropdown_item,
                types
        ));

        // Definitions list
        defAdapter = new VirusDefinitionAdapter(this, defs);
        listDefinitions.setAdapter(defAdapter);
        new FetchDefinitionsUseCase()
                .execute()
                .enqueue(new Callback<List<Definition>>() {
                    @Override
                    public void onResponse(Call<List<Definition>> call,
                                           Response<List<Definition>> response) {
                        if (response.body() != null) {
                            defs.clear();
                            defs.addAll(response.body());
                            defAdapter.notifyDataSetChanged();
                        }
                    }
                    @Override public void onFailure(Call<List<Definition>> call, Throwable t) { }
                });

        // Start Scan button
        btnStartScan.setOnClickListener(v -> {
            String sel = spinnerScanType.getSelectedItem().toString();
            Intent it = new Intent(DashboardActivity.this, ScanActivity.class);
            it.putExtra("scanType", sel);
            startActivity(it);
        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.dashboard_menu, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();

        if (id == R.id.action_settings) {
            startActivity(new Intent(this, SettingsActivity.class));
            return true;
        }
        else if (id == R.id.action_map) {
            startActivity(new Intent(this, MapActivity.class));
            return true;
        }
        else if (id == R.id.action_chart) {
            startActivity(new Intent(this, ChartActivity.class));
            return true;
        }
        else if (id == R.id.action_history) {
            startActivity(new Intent(this, HistoryActivity.class));
            return true;
        }
        else if (id == R.id.action_logout) {
            pref.setRememberMe(false);
            auth.signOut();
            startActivity(new Intent(this, LoginActivity.class));
            finish();
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
