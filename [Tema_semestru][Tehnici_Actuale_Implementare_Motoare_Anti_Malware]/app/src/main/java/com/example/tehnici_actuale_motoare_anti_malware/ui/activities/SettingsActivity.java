package com.example.tehnici_actuale_motoare_anti_malware.ui.activities;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import com.example.tehnici_actuale_motoare_anti_malware.R;
import com.example.tehnici_actuale_motoare_anti_malware.util.PrefManager;

public class SettingsActivity extends AppCompatActivity {
    private static final int REQUEST_CODE_OPEN_DOCUMENT_TREE = 1001;

    private TextView tvFolderPath;
    private CalendarView calendarSchedule;
    private Switch switchAutoScan;
    private PrefManager prefManager;

    // values to persist
    private String folderUriString;
    private long selectedDateMillis;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_settings);

        prefManager = new PrefManager(this);

        tvFolderPath      = findViewById(R.id.tvFolderPath);
        calendarSchedule  = findViewById(R.id.calendarSchedule);
        switchAutoScan    = findViewById(R.id.switchAutoScan);
        Button btnChoose  = findViewById(R.id.btnChooseFolder);
        Button btnSave    = findViewById(R.id.btnSaveSettings);

        // Load previously saved settings
        folderUriString    = prefManager.getScanFolder();
        if (!folderUriString.isEmpty()) {
            // display only the last segment for readability
            Uri uri = Uri.parse(folderUriString);
            tvFolderPath.setText(uri.getLastPathSegment());
        }
        selectedDateMillis = prefManager.getNextScanDate();
        if (selectedDateMillis > 0) {
            calendarSchedule.setDate(selectedDateMillis, false, true);
        }
        switchAutoScan.setChecked(prefManager.isAutoScanEnabled());

        // Launch system folder picker
        btnChoose.setOnClickListener(v -> {
            Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
            // persist read permission across reboots
            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION |
                    Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION);
            startActivityForResult(intent, REQUEST_CODE_OPEN_DOCUMENT_TREE);
        });

        // Listen for calendar date changes
        calendarSchedule.setOnDateChangeListener((view, year, month, dayOfMonth) -> {
            // month is 0-based
            java.util.Calendar cal = java.util.Calendar.getInstance();
            cal.set(year, month, dayOfMonth, 9, 0, 0);
            selectedDateMillis = cal.getTimeInMillis();
        });

        // Save all settings
        btnSave.setOnClickListener(v -> {
            if (folderUriString == null || folderUriString.isEmpty()) {
                Toast.makeText(this, "Please choose a folder", Toast.LENGTH_SHORT).show();
                return;
            }
            prefManager.setScanFolder(folderUriString);
            prefManager.setNextScanDate(selectedDateMillis);
            prefManager.setAutoScanEnabled(switchAutoScan.isChecked());
            Toast.makeText(this, "Settings saved", Toast.LENGTH_SHORT).show();
            finish();
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == REQUEST_CODE_OPEN_DOCUMENT_TREE && resultCode == RESULT_OK && data != null) {
            Uri treeUri = data.getData();
            // Persist permissions
            getContentResolver().takePersistableUriPermission(
                    treeUri,
                    Intent.FLAG_GRANT_READ_URI_PERMISSION
            );
            folderUriString = treeUri.toString();
            // Display user-friendly name
            tvFolderPath.setText(treeUri.getLastPathSegment());
        }
    }
}
