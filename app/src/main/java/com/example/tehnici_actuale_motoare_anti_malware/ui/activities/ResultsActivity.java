package com.example.tehnici_actuale_motoare_anti_malware.ui.activities;

import android.net.Uri;
import android.os.Bundle;
import android.util.SparseBooleanArray;
import android.view.ActionMode;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.AbsListView;
import android.widget.ListView;
import android.widget.TextView;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.documentfile.provider.DocumentFile;

import com.example.tehnici_actuale_motoare_anti_malware.R;
import com.example.tehnici_actuale_motoare_anti_malware.data.local.model.FileScanResult;
import com.example.tehnici_actuale_motoare_anti_malware.data.local.model.ScanType;
import com.example.tehnici_actuale_motoare_anti_malware.ui.adapters.FileScanResultAdapter;
import com.example.tehnici_actuale_motoare_anti_malware.util.DataHolder;
import com.example.tehnici_actuale_motoare_anti_malware.util.PrefManager;

import java.util.List;

public class ResultsActivity extends AppCompatActivity {
    private TextView tvNoData;
    private ListView lv;
    private List<FileScanResult> results;
    private FileScanResultAdapter adapter;
    private Uri treeUri;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_results);

        tvNoData = findViewById(R.id.tvNoData);
        lv       = findViewById(R.id.listThreats);

        // Reconstruct the folder URI from prefs
        treeUri = Uri.parse(new PrefManager(this).getScanFolder());

        // Load scan results
        results = DataHolder.getScanResults();
        if (results == null || results.isEmpty()) {
            tvNoData.setVisibility(TextView.VISIBLE);
            return;
        }

        tvNoData.setVisibility(TextView.GONE);

        // Set up adapter
        adapter = new FileScanResultAdapter(this, results);
        lv.setAdapter(adapter);

        // Determine if any item is FAST or INTENSIVE
        boolean allowDeletion = false;
        for (FileScanResult r : results) {
            if (r.getScanType() == ScanType.FAST ||
                    r.getScanType() == ScanType.INTENSIVE) {
                allowDeletion = true;
                break;
            }
        }

        if (allowDeletion) {
            // Enable multiple selection for deletion
            lv.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);
            lv.setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener() {
                private int numSelected = 0;

                @Override
                public void onItemCheckedStateChanged(ActionMode mode, int position, long id, boolean checked) {
                    numSelected += checked ? 1 : -1;
                    mode.setTitle(numSelected + " selected");
                }

                @Override
                public boolean onCreateActionMode(ActionMode mode, Menu menu) {
                    mode.getMenuInflater().inflate(R.menu.results_context_menu, menu);
                    return true;
                }

                @Override
                public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
                    return false;
                }

                @Override
                public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                    if (item.getItemId() == R.id.action_delete) {
                        // Delete selected files
                        SparseBooleanArray checked = lv.getCheckedItemPositions();
                        for (int i = checked.size() - 1; i >= 0; i--) {
                            if (checked.valueAt(i)) {
                                int pos = checked.keyAt(i);
                                FileScanResult res = results.get(pos);
                                // Find and delete the DocumentFile
                                DocumentFile tree = DocumentFile.fromTreeUri(ResultsActivity.this, treeUri);
                                if (tree != null) {
                                    DocumentFile df = tree.findFile(res.getFileName());
                                    if (df != null) df.delete();
                                }
                                results.remove(pos);
                            }
                        }
                        adapter.notifyDataSetChanged();
                        mode.finish();
                        return true;
                    }
                    return false;
                }

                @Override
                public void onDestroyActionMode(ActionMode mode) {
                    numSelected = 0;
                }
            });
        }

        // Tap for VirusTotal details
        lv.setOnItemClickListener((parent, view, position, id) -> {
            FileScanResult res = adapter.getItem(position);
            if (res != null && res.getScanType() == ScanType.VIRUSTOTAL) {
                new AlertDialog.Builder(ResultsActivity.this)
                        .setTitle(res.getFileName())
                        .setMessage(res.getVtSummary())
                        .setPositiveButton("OK", null)
                        .show();
            }
        });
    }
}
